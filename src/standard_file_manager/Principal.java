/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package standard_file_manager;

import java.awt.FileDialog;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Stream;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author James Josue Molina
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Estructura de Datos II");
        Image icono = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("recursos/icono.png"));
        this.setIconImage(icono);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jf_menuCampos = new javax.swing.JFrame();
        jLabel2 = new javax.swing.JLabel();
        jb_crearCampo = new javax.swing.JButton();
        jb_listarCampos = new javax.swing.JButton();
        jb_modificarCampo = new javax.swing.JButton();
        jb_borrarCampo = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jt_listaCampos = new javax.swing.JTable();
        jb_borrarCampo6 = new javax.swing.JButton();
        jd_crearCampo = new javax.swing.JDialog();
        jLabel3 = new javax.swing.JLabel();
        tf_nombreCampo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cb_tipoCampo = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tf_sizeCampo = new javax.swing.JTextField();
        jb_crearCampoDialog = new javax.swing.JButton();
        jd_modificarCampo = new javax.swing.JDialog();
        jLabel7 = new javax.swing.JLabel();
        tf_nombreModCampo = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cb_tipoModCampo = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        tf_sizeModCampo = new javax.swing.JTextField();
        jb_modCampoDialog = new javax.swing.JButton();
        jf_menuRegistros = new javax.swing.JFrame();
        jLabel11 = new javax.swing.JLabel();
        jb_CargarRegistros = new javax.swing.JButton();
        jb_IntroducirRegistro = new javax.swing.JButton();
        jb_modificarRegistro = new javax.swing.JButton();
        jb_buscarRegistro = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jt_listaCampos1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jb_BorrarRegistro = new javax.swing.JButton();
        jb_ListarRegistro = new javax.swing.JButton();
        jb_CruzarArchivo = new javax.swing.JButton();
        jb_VolverRegistro = new javax.swing.JButton();
        cb_registros = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        jTabbedPane5 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        btn_Nuevo1 = new javax.swing.JButton();
        btn_Salvar1 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btn_Cerrar1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jt_listaCampos2 = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jt_nombrecampo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        js_tamanocampo = new javax.swing.JSpinner();
        jLabel12 = new javax.swing.JLabel();
        cb_tipocampo = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jb_cancelar = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jb_listarCampos1 = new javax.swing.JButton();
        jb_borrarCampo1 = new javax.swing.JButton();
        jb_nuevocampo = new javax.swing.JButton();
        jb_crearCampo1 = new javax.swing.JButton();
        jb_modificarCampo1 = new javax.swing.JButton();
        Key1 = new javax.swing.JCheckBox();
        Key2 = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jt_listaCampos3 = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jPanel6 = new javax.swing.JPanel();
        jb_IntroducirRegistro1 = new javax.swing.JButton();
        jb_buscarRegistro1 = new javax.swing.JButton();
        jb_ListarRegistro1 = new javax.swing.JButton();
        jb_BorrarRegistro1 = new javax.swing.JButton();
        jb_CruzarArchivo1 = new javax.swing.JButton();
        jb_modificarRegistro1 = new javax.swing.JButton();
        cb_registros1 = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();

        jLabel2.setText("Menú campos");

        jb_crearCampo.setText("Crear campo");
        jb_crearCampo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_crearCampoMouseClicked(evt);
            }
        });

        jb_listarCampos.setText("Listar campos");
        jb_listarCampos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_listarCamposMouseClicked(evt);
            }
        });
        jb_listarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_listarCamposActionPerformed(evt);
            }
        });

        jb_modificarCampo.setText("Modificar campo");
        jb_modificarCampo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_modificarCampoMouseClicked(evt);
            }
        });
        jb_modificarCampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_modificarCampoActionPerformed(evt);
            }
        });

        jb_borrarCampo.setText("Eliminar campo");
        jb_borrarCampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_borrarCampoActionPerformed(evt);
            }
        });

        jt_listaCampos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Tipo", "Tamaño"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jt_listaCampos);

        jb_borrarCampo6.setText("Volver");
        jb_borrarCampo6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_borrarCampo6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jf_menuCamposLayout = new javax.swing.GroupLayout(jf_menuCampos.getContentPane());
        jf_menuCampos.getContentPane().setLayout(jf_menuCamposLayout);
        jf_menuCamposLayout.setHorizontalGroup(
            jf_menuCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jf_menuCamposLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(174, 174, 174))
            .addGroup(jf_menuCamposLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jf_menuCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jb_modificarCampo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jb_listarCampos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jb_crearCampo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jb_borrarCampo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jb_borrarCampo6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jf_menuCamposLayout.setVerticalGroup(
            jf_menuCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jf_menuCamposLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGroup(jf_menuCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jf_menuCamposLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jb_crearCampo)
                        .addGap(18, 18, 18)
                        .addComponent(jb_listarCampos)
                        .addGap(18, 18, 18)
                        .addComponent(jb_modificarCampo)
                        .addGap(18, 18, 18)
                        .addComponent(jb_borrarCampo)
                        .addGap(18, 18, 18)
                        .addComponent(jb_borrarCampo6))
                    .addGroup(jf_menuCamposLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel3.setText("Crear campo");

        jLabel4.setText("Nombre del campo");

        cb_tipoCampo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Entero", "Caracter" }));

        jLabel5.setText("Tipo de dato");

        jLabel6.setText("Tamaño del campo");

        jb_crearCampoDialog.setText("Crear campo");
        jb_crearCampoDialog.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_crearCampoDialogMouseClicked(evt);
            }
        });
        jb_crearCampoDialog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_crearCampoDialogActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jd_crearCampoLayout = new javax.swing.GroupLayout(jd_crearCampo.getContentPane());
        jd_crearCampo.getContentPane().setLayout(jd_crearCampoLayout);
        jd_crearCampoLayout.setHorizontalGroup(
            jd_crearCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_crearCampoLayout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addGroup(jd_crearCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(tf_nombreCampo)
                    .addComponent(cb_tipoCampo, 0, 209, Short.MAX_VALUE)
                    .addComponent(tf_sizeCampo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_crearCampoLayout.createSequentialGroup()
                .addContainerGap(149, Short.MAX_VALUE)
                .addGroup(jd_crearCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_crearCampoLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(160, 160, 160))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_crearCampoLayout.createSequentialGroup()
                        .addComponent(jb_crearCampoDialog)
                        .addGap(147, 147, 147))))
        );
        jd_crearCampoLayout.setVerticalGroup(
            jd_crearCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_crearCampoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(35, 35, 35)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tf_nombreCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cb_tipoCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tf_sizeCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jb_crearCampoDialog)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jLabel7.setText("Modificar campo");

        jLabel8.setText("Nombre del campo");

        jLabel9.setText("Tipo de dato");

        cb_tipoModCampo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Entero", "Caracter" }));

        jLabel10.setText("Tamaño del campo");

        jb_modCampoDialog.setText("Modificar campo");
        jb_modCampoDialog.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_modCampoDialogMouseClicked(evt);
            }
        });
        jb_modCampoDialog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_modCampoDialogActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jd_modificarCampoLayout = new javax.swing.GroupLayout(jd_modificarCampo.getContentPane());
        jd_modificarCampo.getContentPane().setLayout(jd_modificarCampoLayout);
        jd_modificarCampoLayout.setHorizontalGroup(
            jd_modificarCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_modificarCampoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(149, 149, 149))
            .addGroup(jd_modificarCampoLayout.createSequentialGroup()
                .addGroup(jd_modificarCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_modificarCampoLayout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addGroup(jd_modificarCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8)
                            .addComponent(tf_nombreModCampo)
                            .addComponent(cb_tipoModCampo, 0, 167, Short.MAX_VALUE)
                            .addComponent(tf_sizeModCampo)))
                    .addGroup(jd_modificarCampoLayout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addComponent(jb_modCampoDialog)))
                .addContainerGap(118, Short.MAX_VALUE))
        );
        jd_modificarCampoLayout.setVerticalGroup(
            jd_modificarCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_modificarCampoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(22, 22, 22)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tf_nombreModCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cb_tipoModCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tf_sizeModCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jb_modCampoDialog)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jLabel11.setText("MENU REGISTROS");

        jb_CargarRegistros.setText("Cargar Registros");
        jb_CargarRegistros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_CargarRegistrosMouseClicked(evt);
            }
        });
        jb_CargarRegistros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_CargarRegistrosActionPerformed(evt);
            }
        });

        jb_IntroducirRegistro.setText("Introducir Registro");
        jb_IntroducirRegistro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_IntroducirRegistroMouseClicked(evt);
            }
        });
        jb_IntroducirRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_IntroducirRegistroActionPerformed(evt);
            }
        });

        jb_modificarRegistro.setText("Modificar Registro");
        jb_modificarRegistro.setEnabled(false);
        jb_modificarRegistro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_modificarRegistroMouseClicked(evt);
            }
        });

        jb_buscarRegistro.setText("Buscar Registro");
        jb_buscarRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_buscarRegistroActionPerformed(evt);
            }
        });

        jt_listaCampos1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jt_listaCampos1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jt_listaCampos1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jt_listaCampos1);

        jList1.setModel(new DefaultListModel());
        jScrollPane3.setViewportView(jList1);

        jb_BorrarRegistro.setText("Borrar Registro");
        jb_BorrarRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_BorrarRegistroActionPerformed(evt);
            }
        });

        jb_ListarRegistro.setText("Listar Registro");
        jb_ListarRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_ListarRegistroActionPerformed(evt);
            }
        });

        jb_CruzarArchivo.setText("Cruzar Archivo");
        jb_CruzarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_CruzarArchivoActionPerformed(evt);
            }
        });

        jb_VolverRegistro.setText("Volver");
        jb_VolverRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_VolverRegistroActionPerformed(evt);
            }
        });

        cb_registros.setEnabled(false);

        javax.swing.GroupLayout jf_menuRegistrosLayout = new javax.swing.GroupLayout(jf_menuRegistros.getContentPane());
        jf_menuRegistros.getContentPane().setLayout(jf_menuRegistrosLayout);
        jf_menuRegistrosLayout.setHorizontalGroup(
            jf_menuRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jf_menuRegistrosLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jf_menuRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jb_modificarRegistro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jb_IntroducirRegistro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jb_CargarRegistros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jb_buscarRegistro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jb_BorrarRegistro, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jb_ListarRegistro, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jb_CruzarArchivo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jb_VolverRegistro, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cb_registros, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jf_menuRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jf_menuRegistrosLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11))
                    .addGroup(jf_menuRegistrosLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jf_menuRegistrosLayout.setVerticalGroup(
            jf_menuRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jf_menuRegistrosLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addGroup(jf_menuRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jf_menuRegistrosLayout.createSequentialGroup()
                        .addComponent(jb_CargarRegistros)
                        .addGap(18, 18, 18)
                        .addComponent(jb_IntroducirRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jb_buscarRegistro)
                        .addGap(18, 18, 18)
                        .addComponent(jb_BorrarRegistro)
                        .addGap(18, 18, 18)
                        .addComponent(jb_ListarRegistro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jb_CruzarArchivo)
                        .addGap(18, 18, 18)
                        .addComponent(jb_VolverRegistro)
                        .addGap(18, 18, 18)
                        .addComponent(jb_modificarRegistro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cb_registros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(106, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel17.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Manejo de Registros");
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 20, -1, -1));

        jTabbedPane5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane5MouseClicked(evt);
            }
        });

        jPanel2.setBorder(new javax.swing.border.MatteBorder(null));

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 311, Short.MAX_VALUE)
        );

        jButton2.setText("Abrir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btn_Nuevo1.setText("Nuevo");
        btn_Nuevo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Nuevo1ActionPerformed(evt);
            }
        });

        btn_Salvar1.setText("Salvar");
        btn_Salvar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Salvar1ActionPerformed(evt);
            }
        });

        jButton1.setText("Excel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btn_Cerrar1.setText("Cerrar");
        btn_Cerrar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Cerrar1ActionPerformed(evt);
            }
        });

        jButton3.setText("XML");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_Nuevo1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_Salvar1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_Cerrar1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Cerrar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Salvar1)
                    .addComponent(jButton1)
                    .addComponent(btn_Nuevo1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane5.addTab("Archivos", jPanel2);

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));
        jPanel3.setBorder(new javax.swing.border.MatteBorder(null));

        jt_listaCampos2.setBackground(new java.awt.Color(204, 204, 204));
        jt_listaCampos2.setBorder(new javax.swing.border.MatteBorder(null));
        jt_listaCampos2.setForeground(new java.awt.Color(51, 51, 51));
        jt_listaCampos2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Tipo", "Tamaño"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jt_listaCampos2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jt_listaCampos2MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jt_listaCampos2);

        jPanel5.setBackground(new java.awt.Color(102, 102, 102));
        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jt_nombrecampo.setText("jTextField1");

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nombre");

        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Tamaño");

        cb_tipocampo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Entero", "Caracter" }));

        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Tipo");

        jb_cancelar.setText("Reiniciar");
        jb_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_cancelarActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Menú Campos");

        jb_listarCampos1.setText("Listar");
        jb_listarCampos1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_listarCampos1MouseClicked(evt);
            }
        });
        jb_listarCampos1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_listarCampos1ActionPerformed(evt);
            }
        });

        jb_borrarCampo1.setText("Eliminar");
        jb_borrarCampo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_borrarCampo1ActionPerformed(evt);
            }
        });

        jb_nuevocampo.setText("Nuevo");
        jb_nuevocampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_nuevocampoActionPerformed(evt);
            }
        });

        jb_crearCampo1.setText("Guardar");
        jb_crearCampo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_crearCampo1ActionPerformed(evt);
            }
        });

        jb_modificarCampo1.setText("Modificar");
        jb_modificarCampo1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_modificarCampo1MouseClicked(evt);
            }
        });
        jb_modificarCampo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_modificarCampo1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel14)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cb_tipocampo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(js_tamanocampo)
                            .addComponent(jt_nombrecampo)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jb_borrarCampo1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jb_cancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jb_nuevocampo, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jb_listarCampos1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jb_crearCampo1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jb_modificarCampo1)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jt_nombrecampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(js_tamanocampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cb_tipocampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_nuevocampo)
                    .addComponent(jb_listarCampos1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_crearCampo1)
                    .addComponent(jb_modificarCampo1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_borrarCampo1)
                    .addComponent(jb_cancelar))
                .addContainerGap())
        );

        Key1.setText("Llave principal");

        Key2.setText("Llave candidata");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(Key1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Key2))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Key1)
                    .addComponent(Key2))
                .addContainerGap())
        );

        jTabbedPane5.addTab("Campos", jPanel3);

        jPanel4.setBorder(new javax.swing.border.MatteBorder(null));

        jt_listaCampos3.setBorder(new javax.swing.border.MatteBorder(null));
        jt_listaCampos3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jt_listaCampos3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jt_listaCampos3MouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jt_listaCampos3);

        jList2.setBorder(new javax.swing.border.MatteBorder(null));
        jList2.setModel(new DefaultListModel());
        jScrollPane6.setViewportView(jList2);

        jPanel6.setBackground(new java.awt.Color(153, 153, 153));
        jPanel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jb_IntroducirRegistro1.setText("Introducir");
        jb_IntroducirRegistro1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_IntroducirRegistro1MouseClicked(evt);
            }
        });
        jb_IntroducirRegistro1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_IntroducirRegistro1ActionPerformed(evt);
            }
        });

        jb_buscarRegistro1.setText("Buscar");
        jb_buscarRegistro1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_buscarRegistro1ActionPerformed(evt);
            }
        });

        jb_ListarRegistro1.setText("Listar");
        jb_ListarRegistro1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_ListarRegistro1ActionPerformed(evt);
            }
        });

        jb_BorrarRegistro1.setText("Borrar");
        jb_BorrarRegistro1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_BorrarRegistro1ActionPerformed(evt);
            }
        });

        jb_CruzarArchivo1.setText("Cruzar");
        jb_CruzarArchivo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_CruzarArchivo1ActionPerformed(evt);
            }
        });

        jb_modificarRegistro1.setText("Modificar");
        jb_modificarRegistro1.setEnabled(false);
        jb_modificarRegistro1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_modificarRegistro1MouseClicked(evt);
            }
        });
        jb_modificarRegistro1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_modificarRegistro1ActionPerformed(evt);
            }
        });

        cb_registros1.setEnabled(false);

        jLabel16.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Menú Registro");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel16))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cb_registros1, 0, 139, Short.MAX_VALUE)
                            .addComponent(jb_modificarRegistro1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jb_CruzarArchivo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jb_ListarRegistro1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jb_buscarRegistro1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jb_IntroducirRegistro1, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                            .addComponent(jb_BorrarRegistro1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addGap(16, 16, 16)
                .addComponent(jb_IntroducirRegistro1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jb_buscarRegistro1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jb_ListarRegistro1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jb_BorrarRegistro1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jb_CruzarArchivo1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jb_modificarRegistro1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cb_registros1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
                .addGap(6, 6, 6))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane6)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(31, 31, 31))
        );

        jTabbedPane5.addTab("Registro", jPanel4);

        getContentPane().add(jTabbedPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 660, 400));

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/fondo.jpg"))); // NOI18N
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -7, 700, 470));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jb_crearCampoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_crearCampoMouseClicked
        jd_crearCampo.setVisible(true);
        jd_crearCampo.pack();
        jd_crearCampo.setLocationRelativeTo(this);
    }//GEN-LAST:event_jb_crearCampoMouseClicked

    private void jb_crearCampoDialogMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_crearCampoDialogMouseClicked
        String nombre = tf_nombreCampo.getText();
        boolean isChar,k1=false,k2=false;
        if (((String) cb_tipoCampo.getSelectedItem()).equals("Entero")) {
            isChar = false;
        } else {
            isChar = true;
        }
        int size = Integer.parseInt(tf_sizeCampo.getText());
        if (Key1.isSelected()&&Key2.isSelected()==false){
            k1=true;
            Key1.setEnabled(false);
        }else if (Key1.isSelected()==false&&Key2.isSelected()){
            k2=true;
            Key2.setEnabled(false);
        }
        Campo campo = new Campo(nombre, isChar, size,k1,k2);
        archivo.addCampo(campo);

        tf_nombreCampo.setText("");
        tf_sizeCampo.setText("");
        cb_tipoCampo.setSelectedIndex(0);
    }//GEN-LAST:event_jb_crearCampoDialogMouseClicked

    private void jb_listarCamposMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_listarCamposMouseClicked
        actualizarTablaCampos();
    }//GEN-LAST:event_jb_listarCamposMouseClicked

    private void jb_modificarCampoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_modificarCampoMouseClicked
        if (campoSeleccionado() != -1) {
            Campo c = archivo.getCampos().get(campoSeleccionado());
            tf_nombreModCampo.setText(c.getNombre());
            if (c.isIsChar()) {
                cb_tipoModCampo.setSelectedIndex(1);
            } else {
                cb_tipoModCampo.setSelectedIndex(0);
            }
            tf_sizeModCampo.setText(Integer.toString(c.getSize()));
            jd_modificarCampo.pack();
            jd_modificarCampo.setVisible(true);
            jd_modificarCampo.setLocationRelativeTo(this);
        } else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un campo para poder modificarlo");
        }
    }//GEN-LAST:event_jb_modificarCampoMouseClicked

    private void jb_modCampoDialogMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_modCampoDialogMouseClicked
        String nombre = tf_nombreModCampo.getText();
        boolean isChar,k1=false,k2=false;
        if (((String) cb_tipoModCampo.getSelectedItem()).equals("Entero")) {
            isChar = false;
        } else {
            isChar = true;
        }
        int size = Integer.parseInt(tf_sizeModCampo.getText());
        if (Key1.isSelected()&&Key2.isSelected()==false){
            k1=true;
            Key1.setEnabled(false);
        }else if (Key1.isSelected()==false&&Key2.isSelected()){
            k2=true;
            Key2.setEnabled(false);
        }
        Campo campo = new Campo(nombre, isChar, size,k1,k2);
        archivo.getCampos().get(campoSelec).setNombre(nombre);
        archivo.getCampos().get(campoSelec).setIsChar(isChar);
        archivo.getCampos().get(campoSelec).setSize(size);

        tf_nombreModCampo.setText("");
        tf_sizeModCampo.setText("");
        cb_tipoModCampo.setSelectedIndex(0);
    }//GEN-LAST:event_jb_modCampoDialogMouseClicked

    private void jb_borrarCampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_borrarCampoActionPerformed
        int aux = jt_listaCampos.getSelectedRow();
        if (aux >= 0) {
            archivo.getCampos().remove(aux);
            actualizarTablaCampos();
        }
    }//GEN-LAST:event_jb_borrarCampoActionPerformed

    private void jb_modificarCampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_modificarCampoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_modificarCampoActionPerformed

    private void jb_CargarRegistrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_CargarRegistrosMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_CargarRegistrosMouseClicked

    private void jb_IntroducirRegistroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_IntroducirRegistroMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_IntroducirRegistroMouseClicked

    private void jb_modificarRegistroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_modificarRegistroMouseClicked
        DefaultComboBoxModel modelo = (DefaultComboBoxModel) cb_registros.getModel();
        int pos = modelo.getIndexOf(modelo.getSelectedItem());
        Registro temp = archivo.getRegistros().get(jt_listaCampos1.getSelectedRow());
        String aux = JOptionPane.showInputDialog(null, "Ingrese el campo (" + archivo.getCampos().get(pos).toString() + ")");
        if( !(aux == null) ){
            if (archivo.getCampos().get(pos).isIsChar()) {
                if (aux.length() <= archivo.getCampos().get(pos).getSize()) {
                    temp.getPablo().set(pos,aux);
                } else {
                    while (!(aux.length() <= archivo.getCampos().get(pos).getSize())) {
                        aux = JOptionPane.showInputDialog(null, "Ingrese el campo nuevamente (" + archivo.getCampos().get(pos).toString() + ")");
                    }
                   temp.getPablo().set(pos,aux);
                }
            } else {
                if (aux.length() <= archivo.getCampos().get(pos).getSize() && calcIsNumeric(aux)) {
                    temp.getPablo().set(pos,aux);
                } else {
                    while (!(aux.length() <= archivo.getCampos().get(pos).getSize() && calcIsNumeric(aux))) {
                        aux = JOptionPane.showInputDialog(null, "Ingrese el campo nuevamente (" + archivo.getCampos().get(pos).toString() + ")");
                    }
                    temp.getPablo().set(pos,aux);
                }
            }
        }
        cb_registros.setEnabled(false);
        jb_modificarRegistro.setEnabled(false);
    }//GEN-LAST:event_jb_modificarRegistroMouseClicked

    private void jb_buscarRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_buscarRegistroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_buscarRegistroActionPerformed

    private void jb_BorrarRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_BorrarRegistroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_BorrarRegistroActionPerformed

    private void jb_ListarRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_ListarRegistroActionPerformed
        jt_listaCampos1.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "ID"
                }
        ) {
            Class[] types = new Class[]{
                java.lang.String.class
            };
            boolean[] canEdit = new boolean[]{
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        DefaultTableModel modeloListaCampo = (DefaultTableModel) jt_listaCampos1.getModel();
        for (int i = 0; i <archivo.getRegistros().size(); i++) {
            Object[] id = {archivo.getRegistros().get(i).getRRN()};
            modeloListaCampo.addRow(id);
        }
        jt_listaCampos1.setModel(modeloListaCampo);
    }//GEN-LAST:event_jb_ListarRegistroActionPerformed

    private void jb_CruzarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_CruzarArchivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_CruzarArchivoActionPerformed

    private void jb_VolverRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_VolverRegistroActionPerformed
        this.setVisible(true);
        jf_menuRegistros.pack();
        jf_menuRegistros.setVisible(false);
    }//GEN-LAST:event_jb_VolverRegistroActionPerformed

    private void jb_IntroducirRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_IntroducirRegistroActionPerformed
        Registro temp = new Registro();
        for (int i = 0; i <archivo.getCampos().size(); i++) {
            String aux = JOptionPane.showInputDialog(null, "Ingrese el campo (" + archivo.getCampos().get(i).toString() + ")");
            if (archivo.getCampos().get(i).isIsChar()) {
                if (aux.length() <= archivo.getCampos().get(i).getSize()) {
                    temp.Agregar(aux);
                } else {
                    while (!(aux.length() <= archivo.getCampos().get(i).getSize())) {
                        aux = JOptionPane.showInputDialog(null, "Ingrese el campo nuevamente (" + archivo.getCampos().get(i).toString() + ")");
                    }
                    temp.Agregar(aux);
                }
            } else {
                if (aux.length() <= archivo.getCampos().get(i).getSize() && calcIsNumeric(aux)) {
                    temp.Agregar(aux);
                } else {
                    while (!(aux.length() <= archivo.getCampos().get(i).getSize() && calcIsNumeric(aux))) {
                        aux = JOptionPane.showInputDialog(null, "Ingrese el campo nuevamente (" + archivo.getCampos().get(i).toString() + ")");
                    }
                    temp.Agregar(aux);
                }
            }//btn_Salir
        }
        //temp.setID("MMCJ" + (IDTemp++));
        archivo.addRegistro(temp);
    }//GEN-LAST:event_jb_IntroducirRegistroActionPerformed

    private void jb_borrarCampo6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_borrarCampo6ActionPerformed
        this.setVisible(true);
        jf_menuCampos.pack();
        jf_menuCampos.setVisible(false);
    }//GEN-LAST:event_jb_borrarCampo6ActionPerformed

    private void jt_listaCampos1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jt_listaCampos1MouseClicked
        jList1.setModel(new DefaultListModel());
        cb_registros.setModel(new DefaultComboBoxModel());
        DefaultListModel model = (DefaultListModel) jList1.getModel();
        DefaultComboBoxModel cbModel = (DefaultComboBoxModel) cb_registros.getModel();
        Registro temp = archivo.getRegistros().get(jt_listaCampos1.getSelectedRow());
        for (int i = 0; i < temp.getPablo().size(); i++) {
            model.addElement(archivo.getCampos().get(i).getNombre() + ": " + temp.getPablo().get(i));
            cbModel.addElement(archivo.getCampos().get(i).getNombre());
        }
        jList1.setModel(model);
        cb_registros.setEnabled(true);
        jb_modificarRegistro.setEnabled(true);
    }//GEN-LAST:event_jt_listaCampos1MouseClicked

    private void jb_listarCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_listarCamposActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_listarCamposActionPerformed

    private void jb_crearCampoDialogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_crearCampoDialogActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_crearCampoDialogActionPerformed

    private void jb_borrarCampo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_borrarCampo1ActionPerformed
        int aux = jt_listaCampos2.getSelectedRow();
        if (aux >= 0) {
            archivo.getCampos().remove(aux);
            actualizarTablaCampos();
        }
        deshabilitar();
        jb_listarCampos1.setEnabled(true);
        jb_nuevocampo.setEnabled(true);
    }//GEN-LAST:event_jb_borrarCampo1ActionPerformed

    private void jb_modificarCampo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_modificarCampo1ActionPerformed
           if (campoSeleccionado() != -1) {
            String nombre = jt_nombrecampo.getText();
            boolean isChar,k1=false,k2=false;
            if (((String) cb_tipocampo.getSelectedItem()).equals("Entero")) {
                isChar = false;
            } else {
                isChar = true;
            }
            int size = (Integer)js_tamanocampo.getValue();
            if (Key1.isSelected()&&Key2.isSelected()==false){
            k1=true;
            Key1.setEnabled(false);
            }else if (Key1.isSelected()==false&&Key2.isSelected()){
            k2=true;
            Key2.setEnabled(false);
            }
            Campo campo = new Campo(nombre, isChar, size,k1,k2);
            archivo.getCampos().get(campoSelec).setNombre(nombre);
            archivo.getCampos().get(campoSelec).setIsChar(isChar);
            archivo.getCampos().get(campoSelec).setSize(size);

            jt_nombrecampo.setText("");
            js_tamanocampo.setValue(0);
            cb_tipocampo.setSelectedIndex(0);
            deshabilitar();
            jb_listarCampos1.setEnabled(true);
            jb_nuevocampo.setEnabled(true);
            actualizarTablaCampos();
        } else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un campo para poder modificarlo");
        }
    }//GEN-LAST:event_jb_modificarCampo1ActionPerformed

    private void jb_modificarCampo1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_modificarCampo1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_modificarCampo1MouseClicked

    private void jb_listarCampos1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_listarCampos1ActionPerformed
        actualizarTablaCampos();
    }//GEN-LAST:event_jb_listarCampos1ActionPerformed

    private void jb_listarCampos1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_listarCampos1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_listarCampos1MouseClicked

    private void jb_crearCampo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_crearCampo1ActionPerformed
        String nombre = jt_nombrecampo.getText();
        boolean isChar,k1=false,k2=false;
        
        if (((String) cb_tipocampo.getSelectedItem()).equals("Entero")) {
            isChar = false;
        } else {
            isChar = true;
        }
        int size = (Integer)js_tamanocampo.getValue(); 
        if (Key1.isSelected()&&Key2.isSelected()==false){
            k1=true;
            Key1.setEnabled(false);
            archivo.setPrimaryKeyIndex(archivo.getCampos().size());
        }else if (Key1.isSelected()==false&&Key2.isSelected()){
            k2=true;
            Key2.setEnabled(false);
            archivo.setSecondaryKeyIndex(archivo.getCampos().size());
        }
        Campo campo = new Campo(nombre, isChar, size,k1,k2);
        archivo.addCampo(campo);

        jt_nombrecampo.setText("");
        js_tamanocampo.setValue(0);
        cb_tipocampo.setSelectedIndex(0);
        deshabilitar();
        jb_nuevocampo.setEnabled(true);
        actualizarTablaCampos();  
        Key1.setSelected(false);
        Key2.setSelected(false);
    }//GEN-LAST:event_jb_crearCampo1ActionPerformed

    private void btn_Cerrar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Cerrar1ActionPerformed
        try {
            bw.close();
            fw.close();
        } catch (IOException ex) {
            System.out.println("ME MAME PERRO x2");
        }
        JOptionPane.showMessageDialog(this, "Se ha cerrado el archivo");
    }//GEN-LAST:event_btn_Cerrar1ActionPerformed

    private void btn_Salvar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Salvar1ActionPerformed
        if (!archivo.getCampos().isEmpty()) {
            String metaData = "";//registros = ""
            int recordSize = 0;//recNum = 0;
            for (int i = 0; i < archivo.getCampos().size(); i++) {
                if (i == 0) {
                    metaData += '{';
                    }
                    metaData += archivo.getCampos().get(i).toString();
                    if (i == archivo.getCampos().size() - 1) {
                        metaData += '}';
                } else {
                    metaData += ", ";
                }
                recordSize += archivo.getCampos().get(i).getSize()+1;
            }
            metaData += "\n" + Integer.toString(recordSize);
            metaData += "\n" + archivo.getContRegis()+"\n";

            try {
                fw = new FileWriter(Uni_archivo);
                bw = new BufferedWriter(fw);
                bw.append(metaData);
                //                fw = new FileWriter(Uni_archivo);
                //                bw = new BufferedWriter(fw);
                for (int i = 0; i < archivo.getRegistros().size(); i++) {
                    bw.append(archivo.getRegistros().get(i).toString()+ "\n");
                }
                bw.flush();
                bw.close();
                fw.close();
                JOptionPane.showMessageDialog(this, "Se ha salvado correctamente");
            } catch (IOException ex) {
                System.out.println("ME MAME PERRIN");
            }

            if(!archivo.getRegistros().isEmpty()){
                bt.escribirArchivo();
            }
        } else {
            jf_menuCampos.pack();
            jf_menuCampos.setVisible(true);
            jf_menuCampos.setLocationRelativeTo(this);

        }
    }//GEN-LAST:event_btn_Salvar1ActionPerformed

    private void btn_Nuevo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Nuevo1ActionPerformed
        try{
            JFileChooser path = new JFileChooser();
            path.showOpenDialog(this);
            //File file;
            System.out.println(path.getSelectedFile().getPath().substring(path.getSelectedFile().getPath().length() - 4, path.getSelectedFile().getPath().length()));
            if (path.getSelectedFile().getPath().substring(path.getSelectedFile().getPath().length() - 4, path.getSelectedFile().getPath().length()).equals(".txt")) {
                Uni_archivo = new File(path.getSelectedFile().getPath());
                archivo.setArchivo(Uni_archivo);
                String binPath = Uni_archivo.getPath().substring(0, Uni_archivo.getPath().length()-4);
                binPath += ".tree";
                bt = new AdminBTree(binPath);
            } else {
                Uni_archivo = new File(path.getSelectedFile().getPath() + ".txt");
                archivo.setArchivo(Uni_archivo);
                String binPath = Uni_archivo.getPath().substring(0, Uni_archivo.getPath().length()-4);
                binPath += ".tree";
                bt = new AdminBTree(binPath);
            }
            if (!Uni_archivo.exists()) {
                try {
                    Uni_archivo.createNewFile();
                    archivo.setArchivo(Uni_archivo);
                    String binPath = Uni_archivo.getPath().substring(0, Uni_archivo.getPath().length()-4);
                    binPath += ".tree";
                    bt = new AdminBTree(binPath);
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            }
        }catch(Exception e){
            
        }
        
    }//GEN-LAST:event_btn_Nuevo1ActionPerformed

    private void jTabbedPane5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane5MouseClicked
        deshabilitar();
    }//GEN-LAST:event_jTabbedPane5MouseClicked

    private void jb_nuevocampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_nuevocampoActionPerformed
        habilitar();
        jb_crearCampo1.setEnabled(true);
        jb_nuevocampo.setEnabled(false);
    }//GEN-LAST:event_jb_nuevocampoActionPerformed

    private void jt_listaCampos2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jt_listaCampos2MouseClicked
        System.out.println((String)jt_listaCampos2.getValueAt(jt_listaCampos2.getSelectedRow(),0));
        jb_crearCampo1.setEnabled(false);
        jb_crearCampo1.setEnabled(false);
        jb_nuevocampo.setEnabled(false);
        jb_listarCampos1.setEnabled(false);
        jb_modificarCampo1.setEnabled(true);
        jb_cancelar.setEnabled(true);
        jb_borrarCampo1.setEnabled(true);
        habilitar();
        jt_nombrecampo.setText((String)jt_listaCampos2.getValueAt(jt_listaCampos2.getSelectedRow(),0));
        js_tamanocampo.setValue(jt_listaCampos2.getValueAt(jt_listaCampos2.getSelectedRow(),2));
        if( ((String)jt_listaCampos2.getValueAt(jt_listaCampos2.getSelectedRow(),1)).equals("Entero") ){
            cb_tipocampo.setSelectedIndex(0);
        }else{
            cb_tipocampo.setSelectedIndex(1);
        }
    }//GEN-LAST:event_jt_listaCampos2MouseClicked

    private void jb_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_cancelarActionPerformed
        deshabilitar();
        actualizarTablaCampos();
        jb_listarCampos1.setEnabled(true);
        jb_nuevocampo.setEnabled(true);
    }//GEN-LAST:event_jb_cancelarActionPerformed

    private void jb_modCampoDialogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_modCampoDialogActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_modCampoDialogActionPerformed

    private void jt_listaCampos3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jt_listaCampos3MouseClicked
        jList2.setModel(new DefaultListModel());
        cb_registros1.setModel(new DefaultComboBoxModel());
        DefaultListModel model = (DefaultListModel) jList2.getModel();
        DefaultComboBoxModel cbModel = (DefaultComboBoxModel) cb_registros1.getModel();
        Registro temp = archivo.getRegistros().get(jt_listaCampos3.getSelectedRow());
        for (int i = 0; i < temp.getPablo().size(); i++) {
            model.addElement(archivo.getCampos().get(i).getNombre() + ": " + temp.getPablo().get(i));
            cbModel.addElement(archivo.getCampos().get(i).getNombre());
        }
        jList2.setModel(model);
        cb_registros1.setEnabled(true);
        jb_modificarRegistro1.setEnabled(true);
    }//GEN-LAST:event_jt_listaCampos3MouseClicked

    private void jb_modificarRegistro1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_modificarRegistro1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_modificarRegistro1MouseClicked

    private void jb_buscarRegistro1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_buscarRegistro1ActionPerformed
        String key=JOptionPane.showInputDialog("Ingrese la llave del elemento: ");
        String RRN=bt.getTree().search2(bt.getTree().getRoot(), key);
        if (RRN==null){
            JOptionPane.showMessageDialog(null, "El registro buscado no existe o sea eliminado");
        }else{
            String metaData = "";//registros = ""
            int recordSize = 0;//recNum = 0;
            for (int i = 0; i < archivo.getCampos().size(); i++) {
                if (i == 0) {
                    metaData += '{';
                    }
                    metaData += archivo.getCampos().get(i).toString();
                    if (i == archivo.getCampos().size() - 1) {
                        metaData += '}';
                } else {
                    metaData += ", ";
                }
                recordSize += archivo.getCampos().get(i).getSize()+1;
            }
            metaData +=  Integer.toString(recordSize);
            metaData +=  archivo.getContRegis();
            try {
                String[] aux=RRN.split(";");
                String output = "---";
                File raf2 = new File(archivo.getArchivo().getPath());
                Object lineaEncontrada;
                try (Stream lines = Files.lines(Paths.get(archivo.getArchivo().getPath()))) { 
                    lineaEncontrada = lines.skip(Integer.parseInt(aux[1])+2).findFirst().get();
                } 
                System.out.println((String)lineaEncontrada);
                output = (String)lineaEncontrada;
                JOptionPane.showMessageDialog(this, "Lo encontro: " + output);
            } catch (Exception ex) {
                System.out.println("EXPLOTO***********");
            }
            System.out.println("encontre:"+ RRN);
        }
    }//GEN-LAST:event_jb_buscarRegistro1ActionPerformed

    private void jb_BorrarRegistro1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_BorrarRegistro1ActionPerformed
        
    }//GEN-LAST:event_jb_BorrarRegistro1ActionPerformed

    private void jb_ListarRegistro1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_ListarRegistro1ActionPerformed
        jt_listaCampos3.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "ID"
                }
        ) {
            Class[] types = new Class[]{
                java.lang.String.class
            };
            boolean[] canEdit = new boolean[]{
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        DefaultTableModel modeloListaCampo = (DefaultTableModel) jt_listaCampos3.getModel();
        for (int i = 0; i <archivo.getRegistros().size(); i++) {
            Object[] id = {archivo.getRegistros().get(i).getRRN()};
            modeloListaCampo.addRow(id);
        }
        jt_listaCampos3.setModel(modeloListaCampo);
    }//GEN-LAST:event_jb_ListarRegistro1ActionPerformed

    private void jb_CruzarArchivo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_CruzarArchivo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_CruzarArchivo1ActionPerformed

    private void jb_IntroducirRegistro1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_IntroducirRegistro1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_IntroducirRegistro1MouseClicked

    private void jb_IntroducirRegistro1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_IntroducirRegistro1ActionPerformed
        try{
            Registro temp = new Registro();
            if(archivo.getSizeRegis() == 0 && archivo.getCampos().size() != 0)
                archivo.calcSizeRegis();
            temp.setSize(archivo.getSizeRegis());
            for (int i = 0; i <archivo.getCampos().size(); i++) {
                String aux = JOptionPane.showInputDialog(null, "Ingrese el campo (" + archivo.getCampos().get(i).toString() + ")");
                if (archivo.getCampos().get(i).isIsChar()) {
                    if (aux.length() <= archivo.getCampos().get(i).getSize()) {
                        temp.Agregar(aux);
                    } else {
                        while (!(aux.length() <= archivo.getCampos().get(i).getSize())) {
                            aux = JOptionPane.showInputDialog(null, "Ingrese el campo nuevamente (" + archivo.getCampos().get(i).toString() + ")");
                        }
                        temp.Agregar(aux);
                    }
                } else {
                    if (aux.length() <= archivo.getCampos().get(i).getSize() && calcIsNumeric(aux)) {
                        temp.Agregar(aux);
                    } else {
                        while (!(aux.length() <= archivo.getCampos().get(i).getSize() && calcIsNumeric(aux))) {
                            aux = JOptionPane.showInputDialog(null, "Ingrese el campo nuevamente (" + archivo.getCampos().get(i).toString() + ")");
                        }
                        temp.Agregar(aux);
                    }
                }//btn_Salir
            }
            //temp.setID("MMCJ" + (IDTemp++));
            if(archivo.getRegistros().isEmpty()){
                archivo.addRegistro(temp);
                bt.setTree(new BTree(new BTreeNode(null, true), 6));
                String key = "";
                key += keyGenerator(archivo.getRegistros().get(archivo.getRegistros().size()-1).getPablo().get(archivo.getPrimaryKeyIndex())) + ";";
                key += archivo.getRegistros().get(archivo.getRegistros().size()-1).getRRN();
                bt.getTree().insert(key);
                bt.getTree().BFS();
            }else{
                //System.out.println(bt.getListaPersonas().size());
                String key = keyGenerator(temp.getPablo().get(archivo.getPrimaryKeyIndex())) + ";0";
                System.out.println(bt.getTree().search(bt.getTree().getRoot(), key));
                if(bt.getTree().search(bt.getTree().getRoot(), key)!= null){
                    JOptionPane.showMessageDialog(this, "No se pueden repetir llaves primarias");
                    System.out.println("No se pueden repetir llaves primarias");
                }else{
                    archivo.addRegistro(temp);
                    key = "";
                    key += keyGenerator(archivo.getRegistros().get(archivo.getRegistros().size()-1).getPablo().get(archivo.getPrimaryKeyIndex())) + ";";
                    key += archivo.getRegistros().get(archivo.getRegistros().size()-1).getRRN();
                    bt.getTree().insert(key);
                }
            }
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_jb_IntroducirRegistro1ActionPerformed

    private void jb_CargarRegistrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_CargarRegistrosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_CargarRegistrosActionPerformed

    private void jb_modificarRegistro1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_modificarRegistro1ActionPerformed
        DefaultComboBoxModel modelo = (DefaultComboBoxModel) cb_registros1.getModel();
        int pos = modelo.getIndexOf(modelo.getSelectedItem());
        Registro temp = archivo.getRegistros().get(jt_listaCampos3.getSelectedRow());
        String aux = JOptionPane.showInputDialog(null, "Ingrese el campo (" + archivo.getCampos().get(pos).toString() + ")");
        if( !(aux == null) ){
            if (archivo.getCampos().get(pos).isIsChar()) {
                if (aux.length() <= archivo.getCampos().get(pos).getSize()) {
                    temp.getPablo().set(pos,aux);
                } else {
                    while (!(aux.length() <= archivo.getCampos().get(pos).getSize())) {
                        aux = JOptionPane.showInputDialog(null, "Ingrese el campo nuevamente (" + archivo.getCampos().get(pos).toString() + ")");
                    }
                   temp.getPablo().set(pos,aux);
                }
            } else {
                if (aux.length() <= archivo.getCampos().get(pos).getSize() && calcIsNumeric(aux)) {
                    temp.getPablo().set(pos,aux);
                } else {
                    while (!(aux.length() <= archivo.getCampos().get(pos).getSize() && calcIsNumeric(aux))) {
                        aux = JOptionPane.showInputDialog(null, "Ingrese el campo nuevamente (" + archivo.getCampos().get(pos).toString() + ")");
                    }
                    temp.getPablo().set(pos,aux);
                }
            }
        }
        cb_registros1.setEnabled(false);
        jb_modificarRegistro1.setEnabled(false);
    }//GEN-LAST:event_jb_modificarRegistro1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try{
            FileDialog dialogoArchivo;
            dialogoArchivo = new FileDialog(this, "Lista de Archivos desde Frame",FileDialog.LOAD);
            dialogoArchivo.setVisible(true);
            String lugar = dialogoArchivo.getDirectory();
            String name = dialogoArchivo.getFile();
            Excel E = new Excel(archivo.getCampos(),archivo.getRegistros(), name, lugar);
            E.CrearArchivo();
       }catch( Exception e ){
           e.printStackTrace();
       }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JFileChooser path = new JFileChooser();
        path.showOpenDialog(this);
        //File file;
        if (path.getSelectedFile().getPath().substring(path.getSelectedFile().getPath().length() - 4, path.getSelectedFile().getPath().length()).equals(".txt")) {
            System.out.println(path.getSelectedFile().getPath());
            Uni_archivo = new File(path.getSelectedFile().getPath());
            try {
                archivo = new Archivo(Uni_archivo);
                String binPath = Uni_archivo.getPath().substring(0, Uni_archivo.getPath().length()-4);
                binPath += ".tree";
                bt = new AdminBTree(binPath);
                bt.cargarArchivo();
            } catch (FileNotFoundException ex) {
                ex.printStackTrace();
            }
        } else {
            Uni_archivo = new File(path.getSelectedFile().getPath() + ".txt");
            try {
                archivo = new Archivo(Uni_archivo);
                String binPath = Uni_archivo.getPath().substring(0, Uni_archivo.getPath().length()-4);
                binPath += ".tree";
                bt = new AdminBTree(binPath);
                bt.cargarArchivo();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }   
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       try{
            FileDialog dialogoArchivo;
            dialogoArchivo = new FileDialog(this, "Lista de Archivos desde Frame",FileDialog.LOAD);
            dialogoArchivo.setVisible(true);
            String lugar = dialogoArchivo.getDirectory();
            String name = dialogoArchivo.getFile();
            System.out.println("Name -> "+ dialogoArchivo.getFile());
            XMLGenerator xml = new XMLGenerator();
            xml.generate(lugar, name, archivo.getCampos(), archivo.getRegistros());
       }catch( Exception e ){
           e.printStackTrace();
       }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void deshabilitar(){
        jt_nombrecampo.setEnabled(false);
        js_tamanocampo.setEnabled(false);
        cb_tipocampo.setEnabled(false);
        jb_modificarCampo1.setEnabled(false);
        jb_crearCampo1.setEnabled(false);
        jb_borrarCampo1.setEnabled(false);
        //jb_cancelar.setEnabled(false);
        jt_nombrecampo.setText("");
        js_tamanocampo.setValue(0);
        cb_tipocampo.setSelectedIndex(0);
    }
    
    private void habilitar(){
        jt_nombrecampo.setEnabled(true);
        js_tamanocampo.setEnabled(true);
        cb_tipocampo.setEnabled(true);
        jt_nombrecampo.setText("");
        js_tamanocampo.setValue(0);
        cb_tipocampo.setSelectedIndex(0);
    }
    
    public static boolean calcIsNumeric(String x) {
        boolean isNumeric = true;
        try {
            Integer.parseInt(x);
        } catch (Exception e) {
            isNumeric = false;
        }
        return isNumeric;
    }

    public static int keyGenerator(String key){
        int output = 0;
        if(calcIsNumeric(key)){
            output = Integer.parseInt(key);
        }else{
            int auxInt = 0;
            String auxString = "";
            for(int i = 0;i < key.length();i++){
                if(i % 2 == 0)
                    auxInt += key.charAt(i);
                else
                    auxInt -= key.charAt(key.length()-i);
            }
            output = auxInt;
        }
        return output;
    }
    
    
    
    private int campoSeleccionado() {
        int campoSeleccionado = -1;
        DefaultTableModel modelo = (DefaultTableModel) jt_listaCampos2.getModel();
        if (jt_listaCampos2.getSelectedRow() >= -1) {
            campoSeleccionado = jt_listaCampos2.getSelectedRow();
            System.out.println(campoSeleccionado);
        }
        campoSelec = campoSeleccionado;
        return campoSeleccionado;
    }

    private void actualizarTablaCampos() {
        jt_listaCampos2.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Nombre", "Tipo", "Tamaño"
                }
        ) {
            Class[] types = new Class[]{
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean[]{
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });

        DefaultTableModel modelo = (DefaultTableModel) jt_listaCampos2.getModel();
        for (Campo c : archivo.getCampos()) {
            Object[] info = {c.getNombre(), c.getIsChar(), c.getSize()};
            modelo.addRow(info);
        }
        jt_listaCampos2.setModel(modelo);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox Key1;
    private javax.swing.JCheckBox Key2;
    private javax.swing.JButton btn_Cerrar1;
    private javax.swing.JButton btn_Nuevo1;
    private javax.swing.JButton btn_Salvar1;
    private javax.swing.JComboBox<String> cb_registros;
    private javax.swing.JComboBox<String> cb_registros1;
    private javax.swing.JComboBox<String> cb_tipoCampo;
    private javax.swing.JComboBox<String> cb_tipoModCampo;
    private javax.swing.JComboBox<String> cb_tipocampo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JButton jb_BorrarRegistro;
    private javax.swing.JButton jb_BorrarRegistro1;
    private javax.swing.JButton jb_CargarRegistros;
    private javax.swing.JButton jb_CruzarArchivo;
    private javax.swing.JButton jb_CruzarArchivo1;
    private javax.swing.JButton jb_IntroducirRegistro;
    private javax.swing.JButton jb_IntroducirRegistro1;
    private javax.swing.JButton jb_ListarRegistro;
    private javax.swing.JButton jb_ListarRegistro1;
    private javax.swing.JButton jb_VolverRegistro;
    private javax.swing.JButton jb_borrarCampo;
    private javax.swing.JButton jb_borrarCampo1;
    private javax.swing.JButton jb_borrarCampo6;
    private javax.swing.JButton jb_buscarRegistro;
    private javax.swing.JButton jb_buscarRegistro1;
    private javax.swing.JButton jb_cancelar;
    private javax.swing.JButton jb_crearCampo;
    private javax.swing.JButton jb_crearCampo1;
    private javax.swing.JButton jb_crearCampoDialog;
    private javax.swing.JButton jb_listarCampos;
    private javax.swing.JButton jb_listarCampos1;
    private javax.swing.JButton jb_modCampoDialog;
    private javax.swing.JButton jb_modificarCampo;
    private javax.swing.JButton jb_modificarCampo1;
    private javax.swing.JButton jb_modificarRegistro;
    private javax.swing.JButton jb_modificarRegistro1;
    private javax.swing.JButton jb_nuevocampo;
    private javax.swing.JDialog jd_crearCampo;
    private javax.swing.JDialog jd_modificarCampo;
    private javax.swing.JFrame jf_menuCampos;
    private javax.swing.JFrame jf_menuRegistros;
    private javax.swing.JSpinner js_tamanocampo;
    private javax.swing.JTable jt_listaCampos;
    private javax.swing.JTable jt_listaCampos1;
    private javax.swing.JTable jt_listaCampos2;
    private javax.swing.JTable jt_listaCampos3;
    private javax.swing.JTextField jt_nombrecampo;
    private javax.swing.JTextField tf_nombreCampo;
    private javax.swing.JTextField tf_nombreModCampo;
    private javax.swing.JTextField tf_sizeCampo;
    private javax.swing.JTextField tf_sizeModCampo;
    // End of variables declaration//GEN-END:variables
    //ArrayList<Campo> camposTemp = new ArrayList();
    int campoSelec;
    File Uni_archivo;
    Archivo archivo = new Archivo();
    BufferedWriter bw;
    FileWriter fw;
    AdminBTree bt;
    //ArrayList<Registro> RegistroTemp = new ArrayList();
    int IDTemp = 0;
}
